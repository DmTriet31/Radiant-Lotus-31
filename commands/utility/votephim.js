const {
  SlashCommandBuilder,
  EmbedBuilder,
  ButtonBuilder,
  ButtonStyle,
  ActionRowBuilder
} = require('discord.js');

const genreChoices = [
  'H√†nh ƒë·ªông', 'Kinh d·ªã', 'L√£ng m·∫°n', 'H√†i h∆∞·ªõc', 
  'Khoa h·ªçc vi·ªÖn t∆∞·ªüng', 'Ho·∫°t h√¨nh', 'Phim t√†i li·ªáu', 'Ch∆∞a ch·ªçn'
];

module.exports = {
  data: new SlashCommandBuilder()
    .setName('votephim')
    .setDescription('T·∫°o cu·ªôc b·∫ßu ch·ªçn cho th·ªÉ lo·∫°i phim v√† t√™n phim')
    .addStringOption(option =>
      option.setName('genre')
        .setDescription('Ch·ªçn th·ªÉ lo·∫°i phim')
        .setRequired(true)
        .addChoices(...genreChoices.map(genre => ({ name: genre, value: genre })))
    )
    .addStringOption(option =>
      option.setName('movie')
        .setDescription('T√™n phim')
        .setRequired(true)
    )
    .addStringOption(option =>
      option.setName('date')
        .setDescription('Ng√†y th√°ng xem phim (VD: 20/04/2025)')
        .setRequired(true)
    ),

  async execute(interaction) {
    const genre = interaction.options.getString('genre');
    const movie = interaction.options.getString('movie');
    const date = interaction.options.getString('date');
    const member = interaction.member;

    const embed = new EmbedBuilder()
      .setColor(0xFF6347)
      .setAuthor({
        name: `${interaction.user.username}`,
        iconURL: interaction.user.displayAvatarURL()
      })
      .setTitle('Cu·ªôc B·∫ßu Ch·ªçn Phim Xem C√πng!')
      .setDescription(`**Th·ªÉ lo·∫°i phim**: ${genre}\n**T√™n phim**: ${movie}\n**Ng√†y xem**: ${date}`)
      .setFooter({ text: 'H√£y tham gia vote ƒë·ªÉ ch·ªçn phim xem!' });

    const voteButton = new ButtonBuilder()
      .setCustomId('vote_yes')
      .setLabel('üëç Th√≠ch Phim')
      .setStyle(ButtonStyle.Success);

    const declineButton = new ButtonBuilder()
      .setCustomId('vote_no')
      .setLabel('üëé Kh√¥ng Th√≠ch Phim')
      .setStyle(ButtonStyle.Danger);

    const row = new ActionRowBuilder().addComponents(voteButton, declineButton);

    await interaction.reply({
      content: `${interaction.user} ƒë√£ t·∫°o m·ªôt cu·ªôc b·∫ßu ch·ªçn phim!`,
      embeds: [embed],
      components: [row]
    });
  }
};
